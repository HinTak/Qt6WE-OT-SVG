name: CI

on:
  push:
    paths-ignore:
      - README.md
      - .github/**
    tags:
      - Qt6WE-OT-SVG*

jobs:
  pre-fedora-job:
    runs-on: ubuntu-latest
    container: fedora:40
    permissions: write-all
    steps:
      - uses: actions/cache@v4
        id: cache-bin
        with:
          path: |
            cached
          key: Qt6WE-OT-SVG-${{ github.sha }}
      - run: cat /etc/os-release
      - run: df
      - run: dnf install -y dnf-utils rpm-build
      - run: curl -o a.rpm https://kojipkgs.fedoraproject.org//packages/qt6-qtwebengine/6.7.2/1.fc40/src/qt6-qtwebengine-6.7.2-1.fc40.src.rpm
      - run: df
      - run: rpm -ivh a.rpm
      - run: rm -f a.rpm
      - uses: actions/checkout@v4
      - run: patch ~/rpmbuild/SPECS/qt6-qtwebengine.spec qt6-qtwebengine.spec.diff
      - run: dnf install -y wget
      - run: wget https://mirrors.20i.com/pub/qt.io/development_releases/qt/6.8/6.8.0-beta2/src/submodules/qtwebengine-everywhere-src-6.8.0-beta2.tar.xz
      - run: cp ~/rpmbuild/SOURCES/*.sh ~/rpmbuild/SOURCES/*.py .
      - run: dnf install -y perl
      - run: perl -pi -e "s(.+openh264.+)()" clean_qtwebengine.sh
      - name: T1
        if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
        run: ./clean_qtwebengine.sh 6.8.0-beta2
      - run: rm -f qtwebengine-everywhere-src-6.8.0-beta2.tar.xz
      - run: cp *.patch ~/rpmbuild/SOURCES/
      - run: mkdir -p cached
      - name: T2
        if: ${{ steps.cache-bin.outputs.cache-hit != 'true' }}
        run: cp -p qtwebengine-everywhere-src-6.8.0-beta2-clean.tar.xz cached
      - run: mv -f qtwebengine-everywhere-src-6.8.0-beta2-clean.tar.xz ~/rpmbuild/SOURCES/

  fedora-job:
    runs-on: ubuntu-latest
    needs: pre-fedora-job
    container: fedora:40
    permissions: write-all
    steps:
      - run: cat /etc/os-release
      - run: df
      - run: dnf install -y dnf-utils rpm-build
      - run: curl -o a.rpm https://kojipkgs.fedoraproject.org//packages/qt6-qtwebengine/6.7.2/1.fc40/src/qt6-qtwebengine-6.7.2-1.fc40.src.rpm
      - run: dnf builddep -y --srpm a.rpm
      - run: df
      - run: rpm -ivh a.rpm
      - run: rm -f a.rpm
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        with:
          path: |
            cached
          key: Qt6WE-OT-SVG-${{ github.sha }}
      - run: patch ~/rpmbuild/SPECS/qt6-qtwebengine.spec qt6-qtwebengine.spec.diff
#      - run: dnf install -y wget
#      - run: wget https://mirrors.20i.com/pub/qt.io/development_releases/qt/6.8/6.8.0-beta2/src/submodules/qtwebengine-everywhere-src-6.8.0-beta2.tar.xz
      - run: cp ~/rpmbuild/SOURCES/*.sh ~/rpmbuild/SOURCES/*.py .
      - run: perl -pi -e "s(.+openh264.+)()" clean_qtwebengine.sh
#      - run: ./clean_qtwebengine.sh 6.8.0-beta2
      - run: cp *.patch ~/rpmbuild/SOURCES/
      - run: mv -f cached/qtwebengine-everywhere-src-6.8.0-beta2-clean.tar.xz ~/rpmbuild/SOURCES/
      - run: pushd ~/rpmbuild/SPECS && rpmbuild -bb --noclean qt6-qtwebengine.spec && popd
      - run: find ~/rpmbuild/BUILD -type f -name "platform_jumbo_29.cc" -print -exec cp {} ~/rpmbuild/RPMS \;
      - run: df
      - run: rm -f ~/rpmbuild/RPMS/x86_64/*debug*
      - run: cp -r ~/rpmbuild/RPMS .
      - uses: actions/upload-artifact@v3
        with:
          name: rpms
          path: RPMS
      - run: zip -r9X rpms.zip RPMS
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/Qt6WE-OT-SVG')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload
        if: startsWith(github.ref, 'refs/tags/Qt6WE-OT-SVG')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rpms.zip
          asset_name: rpms.zip
          asset_content_type: application/zip
